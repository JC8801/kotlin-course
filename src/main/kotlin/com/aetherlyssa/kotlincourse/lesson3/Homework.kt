package com.aetherlyssa.kotlincourse.lesson3

class Homework {

    const val event: String = "Hackathon Survival"       //   Название мероприятия, постоянное строковое


    var date: String = "22.09.2024"                      //   Дата мероприятия, изменяемое строковое (возможны изменения)

    var location: String = "Kazakhstan, Qostanai"        //   Место проведения, изменяемое строковое (возможна смена локации)

    private var eventbudget: String                      //   Расчет происходит в другом месте, изменяемое текстовое, приватное по запросу

    var members: Int = 0                                 //   Количество участников может добавляться или убавляться, точное число известно в конце, но всегда больше 0
        get () = field
        private set(value) {}                            //   Приват сеттер подсмотрел в уроке, изначально было условие if>=0

    val duration: Long = 80*60*60                        //   Продолжительность мероприятия

    private lateinit var contactsandservices: String     //   Контакты, условия, услуги - текстовое, изменяемое значение, по запросу

    var status: String = "Скоро"                         //   Статус, строковое изменяемое, например "дата" "скоро" "идет" "завершен"

    var sponsors = listOf("Sulpak", "Kaspy", "Open Society Foundations")    //   Список спонсоров через лист (почитал в интернете, не в ChatGPT)
                                                                            //   или
    val sponsors: String = "Sulpak", "Kaspy", "Open Society Foundations"    //   Список спонсоров через строку, известен заранее, но через list есть arrayListOf() (глубоко не вникал)

    var budget: Double = 100.00                                             //   Бюджет мероприятия, числовое изменяемое

    var internet: Boolean = true                         //   Статус интернета, не совсем понял что это такое, но скорее всего интернет или есть или его нет
                                                         //   или
    var internet: Int = 0                                //   этот способ означает качество связи в диапазоне

    private var interaction: String             //   Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки

    lateinit var commands: Int = 0                       //   Количество команд, известно позже, зависит от количества участников, целое числовое

    private val tasks: String                            //   Перечень задач подготовлен заранее, приватный, строковый неизменяемый

    const val evacuationplan: String = "План эвакуации"  //   План эвакуации утвержден пожарной инспекцией задолго до хакатона, поэтому константа для события

    private val hardware = listOf("device 1", "device 2", "device 3")               //   Список оборудования по запросу через лист, постоянное строковое
                                                                                    //   или
    val hardware: String = "device 1", "device 2", "device 3"                       //   Список оборудования через строку, постоянное строковое

    var freehardware: String = "fdevice 1", "fdevice 2", "fdevice 3"                //   Список свободного оборудования через строку, изменяемое строковое

    val foodcourt: String                                //   График питания, строковый неизменяемый, заранее составленный, неизменное строковое

    private var backupplan: String                       //   Запасной план на случай сбоев, изменяющийся строковый так как заранее не известна природа потенциальных сбоев

    val experts: String = "persona 1", "persona 2", "person 3"                      //   Список экспертов и жюри через строку, известен заранее


    Методы и процедуры для сбора отзывов от участников и гостей, включая анонимные опросы и интервью
    Политика конфиденциальности
    Приватные отзывы (фидбэк) участников и зрителей для анализа проблем
    Текущая температура в помещении
    Мониторинг и анализ производительности сетевого оборудования и интернет-соединения.
    Уровень освещения
    Лог событий мероприятия
    Доступность медицинской помощи
    Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций
    Регистрационный номер мероприятия
    Максимально допустимый уровень шума в помещении хакатона
    Индикатор превышения уровня шума в помещениях
    Формат мероприятия (зависит от геополитической обстановки)
    Количество свободных мест для отдыха (например, кресел или диванов), сеттер валидирует, чтобы количество не было меньше нуля
    План взаимодействия с прессой
    Детальная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.
    Статус получения всех необходимых разрешений
    Указывает, открыт ли доступ к эксклюзивным ресурсам (например, специальному оборудованию)
    Список партнеров мероприятия
    Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия
    План распределения призов
    Контактная информация экстренных служб, медицинского персонала и других важных служб, недоступная участникам
    Особые условия для участников с ограниченными возможностями

    val mood: String by lazy { "" }                      //   Результат опроса о прошедшем мероприятии, будет известен по окончании, внутри код обработки статистических данных

   а, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия
    Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия
    Ма Подробный план хакатонксимальное количество людей, которое может вместить место проведения
    Стандартное количество часов, отведенное каждой команде для работы над проектом.



}

